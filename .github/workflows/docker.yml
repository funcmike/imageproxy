name: Docker

on:
  push:
    branches: [ 'main' ]
    tags: [ 'v*' ]
  pull_request:
    # Run the workflow on pull_request events to ensure we can still build the image.
    # We only publish the image on push events (see if statements in steps below).
    branches: [ 'main' ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v3
  
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v2
      if: github.event_name == 'push'
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: ${{ github.event_name == 'push' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # linux/arm64,linux/arm/v7 fails on github 
        platforms: linux/amd64

    # Sign the Docker image
    - name: Install cosign
      if: github.event_name == 'push'
      uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b #v2.8.1
    - name: Sign the published Docker image
      if: github.event_name == 'push'
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
